security:
    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt

    role_hierarchy:
        ROLE_ADMIN:       [ ROLE_USER, ROLE_SONATA_ADMIN ]
        ROLE_SUPER_ADMIN: [ ROLE_ADMIN, ROLE_EDITOR ]

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username_email

    firewalls:
        main:
            pattern: ^/*
            oauth:
                resource_owners:
                    facebook:           "/login/check-facebook"
#                    twitter:            "/login/check-twitter" disabled but all implemented
                    google:             "/login/check-google"
                login_path:        fos_user_security_login
                use_forward:    true
                use_referer:    true
                #                failure_path:      /login2
                failure_handler: app.authentication_handler
                provider: fos_userbundle
                oauth_user_provider:
                    service: my_user_provider
            form_login:
                provider:       fos_userbundle
                login_path:     fos_user_security_login
                use_forward:    true
                use_referer:    true
                check_path:     fos_user_security_check
                failure_path:   demofony2_front_government
                default_target_path: /
                always_use_default_target_path: false
                failure_handler: app.authentication_handler
            logout:
                path:           fos_user_security_logout
                target:         /
                success_handler: app.authentication_handler
            anonymous: true
            remember_me:
                key:      "%secret%"
                lifetime: 31536000    # 1 year in seconds
                path:     /.*
                domain:   ~
            switch_user: { role: ROLE_ADMIN }
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        default:
            anonymous: ~

    access_control:
        # Public dev tools
        - { path: ^/_wdt, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/_profiler, role: IS_AUTHENTICATED_ANONYMOUSLY }
        # Public login routes
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        # Private routes
        - { path: ^/admin, role: ROLE_ADMIN }
        - { path: ^/admin/efconnect, role: ROLE_ADMIN }
        - { path: ^/admin/elfinder, role: ROLE_ADMIN }
        - { path: ^/api/v1, allow_if: "'GET' == request.getMethod() or has_role('ROLE_USER')" }
        # Rest of all domain
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }
